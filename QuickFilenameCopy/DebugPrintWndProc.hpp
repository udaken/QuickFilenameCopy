#pragma once
#include <string>
#include <format>
#include <windows.h>

namespace {
    using namespace std::string_literals;
    using namespace std::string_view_literals;

    inline std::wstring DebugPrintWndProc(UINT message, WPARAM wParam, LPARAM lParam)
    {
        std::wstring_view messageName;
        std::wstring s;
        switch (message)
        {
        case WM_CREATE:
        {
            auto lpcs = reinterpret_cast<LPCREATESTRUCT>(lParam);
            return std::format(
                L"message=WM_CREATE, wParam={:x}, lParam=CREATESTRUCT{{lpCreateParams={:p}, hInstance={:p},hMenu={:p},hwndParent={:p},cy={},cx={},x={},y={}}}"sv,
                wParam, lpcs->lpCreateParams, (void*)lpcs->hInstance, (void*)lpcs->hMenu, (void*)lpcs->hwndParent, lpcs->cy, lpcs->cx, lpcs->x, lpcs->y);
        }
        case WM_NULL: messageName = L"WM_NULL"; break;
        case WM_DESTROY: messageName = L"WM_DESTROY"sv; break;
        case WM_MOVE: messageName = L"WM_MOVE"sv; break;
        case WM_SIZE: messageName = L"WM_SIZE"sv; break;
        case WM_ACTIVATE: messageName = L"WM_ACTIVATE"sv; break;
        case WM_SETFOCUS: messageName = L"WM_SETFOCUS"sv; break;
        case WM_KILLFOCUS: messageName = L"WM_KILLFOCUS"sv; break;
        case WM_ENABLE: messageName = L"WM_ENABLE"sv; break;
        case WM_SETREDRAW: messageName = L"WM_SETREDRAW"sv; break;
        case WM_SETTEXT: messageName = L"WM_SETTEXT"sv; break;
        case WM_GETTEXT: messageName = L"WM_GETTEXT"sv; break;
        case WM_GETTEXTLENGTH: messageName = L"WM_GETTEXTLENGTH"sv; break;
        case WM_PAINT: messageName = L"WM_PAINT"sv; break;
        case WM_CLOSE: messageName = L"WM_CLOSE"sv; break;
        case WM_QUERYENDSESSION: messageName = L"WM_QUERYENDSESSION"sv; break;
        case WM_QUERYOPEN: messageName = L"WM_QUERYOPEN"sv; break;
        case WM_ENDSESSION: messageName = L"WM_ENDSESSION"sv; break;
        case WM_QUIT: messageName = L"WM_QUIT"sv; break;
        case WM_ERASEBKGND: messageName = L"WM_ERASEBKGND"sv; break;
        case WM_SYSCOLORCHANGE: messageName = L"WM_SYSCOLORCHANGE"sv; break;
        case WM_SHOWWINDOW: messageName = L"WM_SHOWWINDOW"sv; break;
        case WM_WININICHANGE: messageName = L"WM_WININICHANGE"sv; break;
        case WM_DEVMODECHANGE: messageName = L"WM_DEVMODECHANGE"sv; break;
        case WM_ACTIVATEAPP: messageName = L"WM_ACTIVATEAPP"sv; break;
        case WM_FONTCHANGE: messageName = L"WM_FONTCHANGE"sv; break;
        case WM_TIMECHANGE: messageName = L"WM_TIMECHANGE"sv; break;
        case WM_CANCELMODE: messageName = L"WM_CANCELMODE"sv; break;
        case WM_SETCURSOR: messageName = L"WM_SETCURSOR"sv; break;
        case WM_MOUSEACTIVATE: messageName = L"WM_MOUSEACTIVATE"sv; break;
        case WM_CHILDACTIVATE: messageName = L"WM_CHILDACTIVATE"sv; break;
        case WM_QUEUESYNC: messageName = L"WM_QUEUESYNC"sv; break;
        case WM_GETMINMAXINFO: messageName = L"WM_GETMINMAXINFO"sv; break;
        case WM_PAINTICON: messageName = L"WM_PAINTICON"sv; break;
        case WM_ICONERASEBKGND: messageName = L"WM_ICONERASEBKGND"sv; break;
        case WM_NEXTDLGCTL: messageName = L"WM_NEXTDLGCTL"sv; break;
        case WM_SPOOLERSTATUS: messageName = L"WM_SPOOLERSTATUS"sv; break;
        case WM_DRAWITEM: messageName = L"WM_DRAWITEM"sv; break;
        case WM_MEASUREITEM: messageName = L"WM_MEASUREITEM"sv; break;
        case WM_DELETEITEM: messageName = L"WM_DELETEITEM"sv; break;
        case WM_VKEYTOITEM: messageName = L"WM_VKEYTOITEM"sv; break;
        case WM_CHARTOITEM: messageName = L"WM_CHARTOITEM"sv; break;
        case WM_SETFONT: messageName = L"WM_SETFONT"sv; break;
        case WM_GETFONT: messageName = L"WM_GETFONT"sv; break;
        case WM_SETHOTKEY: messageName = L"WM_SETHOTKEY"sv; break;
        case WM_GETHOTKEY: messageName = L"WM_GETHOTKEY"sv; break;
        case WM_QUERYDRAGICON: messageName = L"WM_QUERYDRAGICON"sv; break;
        case WM_COMPAREITEM: messageName = L"WM_COMPAREITEM"sv; break;
        case WM_GETOBJECT: messageName = L"WM_GETOBJECT"sv; break;
        case WM_COMPACTING: messageName = L"WM_COMPACTING"sv; break;
        case WM_COMMNOTIFY: messageName = L"WM_COMMNOTIFY"sv; break;
        case WM_WINDOWPOSCHANGING: messageName = L"WM_WINDOWPOSCHANGING"sv; break;
        case WM_WINDOWPOSCHANGED: messageName = L"WM_WINDOWPOSCHANGED"sv; break;
        case WM_POWER: messageName = L"WM_POWER"sv; break;
        case WM_COPYDATA: messageName = L"WM_COPYDATA"sv; break;
        case WM_CANCELJOURNAL: messageName = L"WM_CANCELJOURNAL"sv; break;
        case WM_NOTIFY: messageName = L"WM_NOTIFY"sv; break;
        case WM_INPUTLANGCHANGEREQUEST: messageName = L"WM_INPUTLANGCHANGEREQUEST"sv; break;
        case WM_INPUTLANGCHANGE: messageName = L"WM_INPUTLANGCHANGE"sv; break;
        case WM_TCARD: messageName = L"WM_TCARD"sv; break;
        case WM_HELP: messageName = L"WM_HELP"sv; break;
        case WM_USERCHANGED: messageName = L"WM_USERCHANGED"sv; break;
        case WM_NOTIFYFORMAT: messageName = L"WM_NOTIFYFORMAT"sv; break;
        case WM_CONTEXTMENU: messageName = L"WM_CONTEXTMENU"sv; break;
        case WM_STYLECHANGING: messageName = L"WM_STYLECHANGING"sv; break;
        case WM_STYLECHANGED: messageName = L"WM_STYLECHANGED"sv; break;
        case WM_DISPLAYCHANGE: messageName = L"WM_DISPLAYCHANGE"sv; break;
        case WM_GETICON: messageName = L"WM_GETICON"sv; break;
        case WM_SETICON: messageName = L"WM_SETICON"sv; break;
        case WM_NCCREATE: messageName = L"WM_NCCREATE"sv; break;
        case WM_NCDESTROY: messageName = L"WM_NCDESTROY"sv; break;
        case WM_NCCALCSIZE: messageName = L"WM_NCCALCSIZE"sv; break;
        case WM_NCHITTEST: messageName = L"WM_NCHITTEST"sv; break;
        case WM_NCPAINT: messageName = L"WM_NCPAINT"sv; break;
        case WM_NCACTIVATE: messageName = L"WM_NCACTIVATE"sv; break;
        case WM_GETDLGCODE: messageName = L"WM_GETDLGCODE"sv; break;
        case WM_SYNCPAINT: messageName = L"WM_SYNCPAINT"sv; break;
        case WM_NCMOUSEMOVE: messageName = L"WM_NCMOUSEMOVE"sv; break;
        case WM_NCLBUTTONDOWN: messageName = L"WM_NCLBUTTONDOWN"sv; break;
        case WM_NCLBUTTONUP: messageName = L"WM_NCLBUTTONUP"sv; break;
        case WM_NCLBUTTONDBLCLK: messageName = L"WM_NCLBUTTONDBLCLK"sv; break;
        case WM_NCRBUTTONDOWN: messageName = L"WM_NCRBUTTONDOWN"sv; break;
        case WM_NCRBUTTONUP: messageName = L"WM_NCRBUTTONUP"sv; break;
        case WM_NCRBUTTONDBLCLK: messageName = L"WM_NCRBUTTONDBLCLK"sv; break;
        case WM_NCMBUTTONDOWN: messageName = L"WM_NCMBUTTONDOWN"sv; break;
        case WM_NCMBUTTONUP: messageName = L"WM_NCMBUTTONUP"sv; break;
        case WM_NCMBUTTONDBLCLK: messageName = L"WM_NCMBUTTONDBLCLK"sv; break;
        case WM_NCXBUTTONDOWN: messageName = L"WM_NCXBUTTONDOWN"sv; break;
        case WM_NCXBUTTONUP: messageName = L"WM_NCXBUTTONUP"sv; break;
        case WM_NCXBUTTONDBLCLK: messageName = L"WM_NCXBUTTONDBLCLK"sv; break;
        case WM_INPUT_DEVICE_CHANGE: messageName = L"WM_INPUT_DEVICE_CHANGE"sv; break;
        case WM_INPUT: messageName = L"WM_INPUT"sv; break;
        case WM_KEYDOWN: messageName = L"WM_KEYDOWN"sv; break;
        case WM_KEYUP: messageName = L"WM_KEYUP"sv; break;
        case WM_CHAR: messageName = L"WM_CHAR"sv; break;
        case WM_DEADCHAR: messageName = L"WM_DEADCHAR"sv; break;
        case WM_SYSKEYDOWN: messageName = L"WM_SYSKEYDOWN"sv; break;
        case WM_SYSKEYUP: messageName = L"WM_SYSKEYUP"sv; break;
        case WM_SYSCHAR: messageName = L"WM_SYSCHAR"sv; break;
        case WM_SYSDEADCHAR: messageName = L"WM_SYSDEADCHAR"sv; break;
        case WM_UNICHAR: messageName = L"WM_UNICHAR"sv; break;
        case WM_IME_STARTCOMPOSITION: messageName = L"WM_IME_STARTCOMPOSITION"sv; break;
        case WM_IME_ENDCOMPOSITION: messageName = L"WM_IME_ENDCOMPOSITION"sv; break;
        case WM_IME_COMPOSITION: messageName = L"WM_IME_COMPOSITION"sv; break;
        case WM_INITDIALOG: messageName = L"WM_INITDIALOG"sv; break;
        case WM_COMMAND: messageName = L"WM_COMMAND"sv; break;
        case WM_SYSCOMMAND: messageName = L"WM_SYSCOMMAND"sv; break;
        case WM_TIMER: messageName = L"WM_TIMER"sv; break;
        case WM_HSCROLL: messageName = L"WM_HSCROLL"sv; break;
        case WM_VSCROLL: messageName = L"WM_VSCROLL"sv; break;
        case WM_INITMENU: messageName = L"WM_INITMENU"sv; break;
        case WM_INITMENUPOPUP: messageName = L"WM_INITMENUPOPUP"sv; break;
        case WM_GESTURE: messageName = L"WM_GESTURE"sv; break;
        case WM_GESTURENOTIFY: messageName = L"WM_GESTURENOTIFY"sv; break;
        case WM_MENUSELECT: messageName = L"WM_MENUSELECT"sv; break;
        case WM_MENUCHAR: messageName = L"WM_MENUCHAR"sv; break;
        case WM_ENTERIDLE: messageName = L"WM_ENTERIDLE"sv; break;
        case WM_MENURBUTTONUP: messageName = L"WM_MENURBUTTONUP"sv; break;
        case WM_MENUDRAG: messageName = L"WM_MENUDRAG"sv; break;
        case WM_MENUGETOBJECT: messageName = L"WM_MENUGETOBJECT"sv; break;
        case WM_UNINITMENUPOPUP: messageName = L"WM_UNINITMENUPOPUP"sv; break;
        case WM_MENUCOMMAND: messageName = L"WM_MENUCOMMAND"sv; break;
        case WM_CHANGEUISTATE: messageName = L"WM_CHANGEUISTATE"sv; break;
        case WM_UPDATEUISTATE: messageName = L"WM_UPDATEUISTATE"sv; break;
        case WM_QUERYUISTATE: messageName = L"WM_QUERYUISTATE"sv; break;
        case WM_CTLCOLORMSGBOX: messageName = L"WM_CTLCOLORMSGBOX"sv; break;
        case WM_CTLCOLOREDIT: messageName = L"WM_CTLCOLOREDIT"sv; break;
        case WM_CTLCOLORLISTBOX: messageName = L"WM_CTLCOLORLISTBOX"sv; break;
        case WM_CTLCOLORBTN: messageName = L"WM_CTLCOLORBTN"sv; break;
        case WM_CTLCOLORDLG: messageName = L"WM_CTLCOLORDLG"sv; break;
        case WM_CTLCOLORSCROLLBAR: messageName = L"WM_CTLCOLORSCROLLBAR"sv; break;
        case WM_CTLCOLORSTATIC: messageName = L"WM_CTLCOLORSTATIC"sv; break;
        case WM_MOUSEMOVE: messageName = L"WM_MOUSEMOVE"sv; break;
        case WM_LBUTTONDOWN: messageName = L"WM_LBUTTONDOWN"sv; break;
        case WM_LBUTTONUP: messageName = L"WM_LBUTTONUP"sv; break;
        case WM_LBUTTONDBLCLK: messageName = L"WM_LBUTTONDBLCLK"sv; break;
        case WM_RBUTTONDOWN: messageName = L"WM_RBUTTONDOWN"sv; break;
        case WM_RBUTTONUP: messageName = L"WM_RBUTTONUP"sv; break;
        case WM_RBUTTONDBLCLK: messageName = L"WM_RBUTTONDBLCLK"sv; break;
        case WM_MBUTTONDOWN: messageName = L"WM_MBUTTONDOWN"sv; break;
        case WM_MBUTTONUP: messageName = L"WM_MBUTTONUP"sv; break;
        case WM_MBUTTONDBLCLK: messageName = L"WM_MBUTTONDBLCLK"sv; break;
        case WM_MOUSEWHEEL: messageName = L"WM_MOUSEWHEEL"sv; break;
        case WM_XBUTTONDOWN: messageName = L"WM_XBUTTONDOWN"sv; break;
        case WM_XBUTTONUP: messageName = L"WM_XBUTTONUP"sv; break;
        case WM_XBUTTONDBLCLK: messageName = L"WM_XBUTTONDBLCLK"sv; break;
        case WM_MOUSEHWHEEL: messageName = L"WM_MOUSEHWHEEL"sv; break;
        case WM_PARENTNOTIFY: messageName = L"WM_PARENTNOTIFY"sv; break;
        case WM_ENTERMENULOOP: messageName = L"WM_ENTERMENULOOP"sv; break;
        case WM_EXITMENULOOP: messageName = L"WM_EXITMENULOOP"sv; break;
        case WM_NEXTMENU: messageName = L"WM_NEXTMENU"sv; break;
        case WM_SIZING: messageName = L"WM_SIZING"sv; break;
        case WM_CAPTURECHANGED: messageName = L"WM_CAPTURECHANGED"sv; break;
        case WM_MOVING: messageName = L"WM_MOVING"sv; break;
        case WM_POWERBROADCAST: messageName = L"WM_POWERBROADCAST"sv; break;
        case WM_DEVICECHANGE: messageName = L"WM_DEVICECHANGE"sv; break;
        case WM_MDICREATE: messageName = L"WM_MDICREATE"sv; break;
        case WM_MDIDESTROY: messageName = L"WM_MDIDESTROY"sv; break;
        case WM_MDIACTIVATE: messageName = L"WM_MDIACTIVATE"sv; break;
        case WM_MDIRESTORE: messageName = L"WM_MDIRESTORE"sv; break;
        case WM_MDINEXT: messageName = L"WM_MDINEXT"sv; break;
        case WM_MDIMAXIMIZE: messageName = L"WM_MDIMAXIMIZE"sv; break;
        case WM_MDITILE: messageName = L"WM_MDITILE"sv; break;
        case WM_MDICASCADE: messageName = L"WM_MDICASCADE"sv; break;
        case WM_MDIICONARRANGE: messageName = L"WM_MDIICONARRANGE"sv; break;
        case WM_MDIGETACTIVE: messageName = L"WM_MDIGETACTIVE"sv; break;
        case WM_MDISETMENU: messageName = L"WM_MDISETMENU"sv; break;
        case WM_ENTERSIZEMOVE: messageName = L"WM_ENTERSIZEMOVE"sv; break;
        case WM_EXITSIZEMOVE: messageName = L"WM_EXITSIZEMOVE"sv; break;
        case WM_DROPFILES: messageName = L"WM_DROPFILES"sv; break;
        case WM_MDIREFRESHMENU: messageName = L"WM_MDIREFRESHMENU"sv; break;
        case WM_POINTERDEVICECHANGE: messageName = L"WM_POINTERDEVICECHANGE"sv; break;
        case WM_POINTERDEVICEINRANGE: messageName = L"WM_POINTERDEVICEINRANGE"sv; break;
        case WM_POINTERDEVICEOUTOFRANGE: messageName = L"WM_POINTERDEVICEOUTOFRANGE"sv; break;
        case WM_TOUCH: messageName = L"WM_TOUCH"sv; break;
        case WM_NCPOINTERUPDATE: messageName = L"WM_NCPOINTERUPDATE"sv; break;
        case WM_NCPOINTERDOWN: messageName = L"WM_NCPOINTERDOWN"sv; break;
        case WM_NCPOINTERUP: messageName = L"WM_NCPOINTERUP"sv; break;
        case WM_POINTERUPDATE: messageName = L"WM_POINTERUPDATE"sv; break;
        case WM_POINTERDOWN: messageName = L"WM_POINTERDOWN"sv; break;
        case WM_POINTERUP: messageName = L"WM_POINTERUP"sv; break;
        case WM_POINTERENTER: messageName = L"WM_POINTERENTER"sv; break;
        case WM_POINTERLEAVE: messageName = L"WM_POINTERLEAVE"sv; break;
        case WM_POINTERACTIVATE: messageName = L"WM_POINTERACTIVATE"sv; break;
        case WM_POINTERCAPTURECHANGED: messageName = L"WM_POINTERCAPTURECHANGED"sv; break;
        case WM_TOUCHHITTESTING: messageName = L"WM_TOUCHHITTESTING"sv; break;
        case WM_POINTERWHEEL: messageName = L"WM_POINTERWHEEL"sv; break;
        case WM_POINTERHWHEEL: messageName = L"WM_POINTERHWHEEL"sv; break;
        case WM_POINTERROUTEDTO: messageName = L"WM_POINTERROUTEDTO"sv; break;
        case WM_POINTERROUTEDAWAY: messageName = L"WM_POINTERROUTEDAWAY"sv; break;
        case WM_POINTERROUTEDRELEASED: messageName = L"WM_POINTERROUTEDRELEASED"sv; break;
        case WM_IME_SETCONTEXT: messageName = L"WM_IME_SETCONTEXT"sv; break;
        case WM_IME_NOTIFY: messageName = L"WM_IME_NOTIFY"sv; break;
        case WM_IME_CONTROL: messageName = L"WM_IME_CONTROL"sv; break;
        case WM_IME_COMPOSITIONFULL: messageName = L"WM_IME_COMPOSITIONFULL"sv; break;
        case WM_IME_SELECT: messageName = L"WM_IME_SELECT"sv; break;
        case WM_IME_CHAR: messageName = L"WM_IME_CHAR"sv; break;
        case WM_IME_REQUEST: messageName = L"WM_IME_REQUEST"sv; break;
        case WM_IME_KEYDOWN: messageName = L"WM_IME_KEYDOWN"sv; break;
        case WM_IME_KEYUP: messageName = L"WM_IME_KEYUP"sv; break;
        case WM_MOUSEHOVER: messageName = L"WM_MOUSEHOVER"sv; break;
        case WM_MOUSELEAVE: messageName = L"WM_MOUSELEAVE"sv; break;
        case WM_NCMOUSEHOVER: messageName = L"WM_NCMOUSEHOVER"sv; break;
        case WM_NCMOUSELEAVE: messageName = L"WM_NCMOUSELEAVE"sv; break;
        case WM_WTSSESSION_CHANGE: messageName = L"WM_WTSSESSION_CHANGE"sv; break;
        case WM_TABLET_FIRST: messageName = L"WM_TABLET_FIRST"sv; break;
        case WM_TABLET_LAST: messageName = L"WM_TABLET_LAST"sv; break;
        case WM_DPICHANGED: messageName = L"WM_DPICHANGED"sv; break;
#if(WINVER >= 0x0605)
        case WM_DPICHANGED_BEFOREPARENT: messageName = L"WM_DPICHANGED_BEFOREPARENT"sv; break;
        case WM_DPICHANGED_AFTERPARENT: messageName = L"WM_DPICHANGED_AFTERPARENT"sv; break;
        case WM_GETDPISCALEDSIZE: messageName = L"WM_GETDPISCALEDSIZE"sv; break;
#endif /* WINVER >= 0x0605 */
        case WM_CUT: messageName = L"WM_CUT"sv; break;
        case WM_COPY: messageName = L"WM_COPY"sv; break;
        case WM_PASTE: messageName = L"WM_PASTE"sv; break;
        case WM_CLEAR: messageName = L"WM_CLEAR"sv; break;
        case WM_UNDO: messageName = L"WM_UNDO"sv; break;
        case WM_RENDERFORMAT: messageName = L"WM_RENDERFORMAT"sv; break;
        case WM_RENDERALLFORMATS: messageName = L"WM_RENDERALLFORMATS"sv; break;
        case WM_DESTROYCLIPBOARD: messageName = L"WM_DESTROYCLIPBOARD"sv; break;
        case WM_DRAWCLIPBOARD: messageName = L"WM_DRAWCLIPBOARD"sv; break;
        case WM_PAINTCLIPBOARD: messageName = L"WM_PAINTCLIPBOARD"sv; break;
        case WM_VSCROLLCLIPBOARD: messageName = L"WM_VSCROLLCLIPBOARD"sv; break;
        case WM_SIZECLIPBOARD: messageName = L"WM_SIZECLIPBOARD"sv; break;
        case WM_ASKCBFORMATNAME: messageName = L"WM_ASKCBFORMATNAME"sv; break;
        case WM_CHANGECBCHAIN: messageName = L"WM_CHANGECBCHAIN"sv; break;
        case WM_HSCROLLCLIPBOARD: messageName = L"WM_HSCROLLCLIPBOARD"sv; break;
        case WM_QUERYNEWPALETTE: messageName = L"WM_QUERYNEWPALETTE"sv; break;
        case WM_PALETTEISCHANGING: messageName = L"WM_PALETTEISCHANGING"sv; break;
        case WM_PALETTECHANGED: messageName = L"WM_PALETTECHANGED"sv; break;
        case WM_HOTKEY: messageName = L"WM_HOTKEY"sv; break;
        case WM_PRINT: messageName = L"WM_PRINT"sv; break;
        case WM_PRINTCLIENT: messageName = L"WM_PRINTCLIENT"sv; break;
        case WM_APPCOMMAND: messageName = L"WM_APPCOMMAND"sv; break;
        case WM_THEMECHANGED: messageName = L"WM_THEMECHANGED"sv; break;
        case WM_CLIPBOARDUPDATE: messageName = L"WM_CLIPBOARDUPDATE"sv; break;
        case WM_DWMCOMPOSITIONCHANGED: messageName = L"WM_DWMCOMPOSITIONCHANGED"sv; break;
        case WM_DWMNCRENDERINGCHANGED: messageName = L"WM_DWMNCRENDERINGCHANGED"sv; break;
        case WM_DWMCOLORIZATIONCOLORCHANGED: messageName = L"WM_DWMCOLORIZATIONCOLORCHANGED"sv; break;
        case WM_DWMWINDOWMAXIMIZEDCHANGE: messageName = L"WM_DWMWINDOWMAXIMIZEDCHANGE"sv; break;
        case WM_DWMSENDICONICTHUMBNAIL: messageName = L"WM_DWMSENDICONICTHUMBNAIL"sv; break;
        case WM_DWMSENDICONICLIVEPREVIEWBITMAP: messageName = L"WM_DWMSENDICONICLIVEPREVIEWBITMAP"sv; break;
        case WM_GETTITLEBARINFOEX: messageName = L"WM_GETTITLEBARINFOEX"sv; break;
        case WM_HANDHELDFIRST: messageName = L"WM_HANDHELDFIRST"sv; break;
        case WM_HANDHELDLAST: messageName = L"WM_HANDHELDLAST"sv; break;
        case WM_AFXFIRST: messageName = L"WM_AFXFIRST"sv; break;
        case WM_AFXLAST: messageName = L"WM_AFXLAST"sv; break;
        case WM_PENWINFIRST: messageName = L"WM_PENWINFIRST"sv; break;
        case WM_PENWINLAST: messageName = L"WM_PENWINLAST"sv; break;
            //---------------------------------------------------------------------------------
        case 0x0090: messageName = L"WM_UAHDESTROYWINDOW"sv; break;
        case 0x0091: messageName = L"WM_UAHDRAWMENU"sv; break;
        case 0x0092: messageName = L"WM_UAHDRAWMENUITEM"sv; break;
        case 0x0093: messageName = L"WM_UAHINITMENU"sv; break;
        case 0x0094: messageName = L"WM_UAHMEASUREMENUITEM"sv; break;
        case 0x0095: messageName = L"WM_UAHNCPAINTMENUPOPUP"sv; break;
        default:
            if (WM_USER <= message && message <= 0x7FFF)
                s = std::format(L"WM_USER+0x{:x}", message - WM_USER);
            else if (WM_APP <= message && message <= 0xBFFF)
                s = std::format(L"WM_APP+0x{:x}", message - WM_APP);
            else
                s = std::format(L"0x{:x}", message);
            messageName = s;
            break;
        }
        return std::format(L"message={}, wParam={:x}, lParam={:x}"sv, messageName, wParam, lParam);
    }
}
